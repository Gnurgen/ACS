<review for-group="Mariboe_Michael_Feveile__njp947__group_698235">
  <exercises>

    <question1>
      <title>Serializability and Locking</title>
      <schedule1>
        <text>
          Is the solution provided both correct and includes a convincing short
          argument justifying it?
        </text>
        <answer>YES</answer>
        <comment>[If your answer is NO write your comment here]</comment>
      </schedule1>

      <schedule2>
        <text>
          Is the solution provided both correct and includes a convincing short
          argument justifying it?
        </text>
        <answer>YES</answer>
        <comment>[If your answer is NO write your comment here]</comment>
      </schedule2>
    </question1>

    <question2>
      <title>Optimistic Concurrency Control</title>
      <scenario1>
        <text>
          Is the solution provided both correct and includes a convincing short
          argument justifying it?
        </text>
        <answer>NO</answer>
        <comment>The solution is correct, but there is hardly any argument. They
                 point out what causes the problem, but does not explain why.</comment>
      </scenario1>

      <scenario2>
        <text>
          Is the solution provided both correct and includes a convincing short
          argument justifying it?
        </text>
        <answer>NO</answer>
        <comment>The solution is correct, but there is hardly any argument. They
                 point out what causes the problem, but does not explain why.</comment>
      </scenario2>

      <scenario3>
        <text>
          Is the solution provided both correct and includes a convincing short
          argument justifying it?
        </text>
        <answer>NO</answer>
        <comment>The solution is correct, but there is hardly any argument. They
                 point out what causes the problem, but does not explain why.</comment>
      </scenario3>

    </question2>
  </exercises>

  <programming>

    <question1>
      <title>Description of implementation and tests</title>
      <q1a>
        <text>
          Does the solution contain a clear description of the approach
          used to achieve before-or-after atomicity?
        </text>
        <answer>YES</answer>
      </q1a>
      <q1b>
        <text>
          Provide comments on any aspects that you found unclear in the
          description of the approach to achieve before-or-after atomicity
        </text>
        <answer>Nothing to add.</answer>
      </q1b>
      <q1c>
        <text>
          Does the code include implementations of Tests 1 and 2 of the
          assignment description as well as of at least another two test
          cases?
        </text>
        <answer>YES</answer>
      </q1c>
      <q1d-i>
        <text>
          Is it tested that the final state resulting from concurrent
          execution
          is correct in that it respects invariants designed in the test?
        </text>
        <answer>YES</answer>
      </q1d-i>
      <q1d-ii>
        <text>
          Is it tested that intermediate reads of the state during concurrent
          execution respect invariants designed in the test, so that it is
          arguable that these intermediate states could be found in an
          equivalent serial schedule?
        </text>
        <answer>YES</answer>
      </q1d-ii>
      <q1e>
        <text>
          Provide comments on why you found that any portions of the test
          descriptions were unclear according to the criteria, and suggestions for
          improvement
        </text>
        <answer>There was basically no description of the tests, so it was not clear. 
                Should simply describe each test, what it tests for and how.
                Also, testConsistency fails. This is because when you check the snapshot you check that it is either
                the original total amount, or one less because a book has been bought but not yet added by the other thread.
                However the other thread first adds the copy and then buys the book, so the test should either be that the snapshot
                should be the original amount or one more as a book has been added but not yet bought or the order of operations in the
                other thread should be reversed, at which point the test succeeds. Also when testing for concurrency, its a good idea
                to run more than 100 iterations.</answer>
      </q1e>
    </question1>

    <question2>
      <title>Correctness argument for locking protocol</title>
      <q2a>
        <text>
          Is the variant of 2PL to which equivalence is being established in
          the correctness argument clearly identified (e.g., conservative, strict,
          conservative strict)?
        </text>
        <answer>YES</answer>
      </q2a>
      <q2b>
        <text>
          Is there a sound argumentation of why the steps in the locking
          protocol designed correspond to steps taken in the chosen variant
          of 2PL?
        </text>
        <answer>YES</answer>
      </q2b>
      <q2c>
        <text>
          Is there an argument for the need to take into account predicate
          reads, with appropriate justification?
        </text>
        <answer>NO</answer>
      </q2c>
      <q2d>
        <text>
          Is there an argument for the need to take into account predicate
          reads, with appropriate justification?
        </text>
        <answer>It is mentioned, and how atomic predicate reads are achieved, but not why it is necessary.</answer>
      </q2d>
    </question2>

    <question3>
      <title>Deadlocks</title>
      <q3a>
        <text>
          Does the solution contain a correct argument for why deadlocks can
          occur in the locking protocol or why deadlocks cannot occur?
        </text>
        <answer>YES</answer>
      </q3a>
      <q3b>
        <text>
          Provide comments on how the argument provided with respect to
          deadlocks could be improved
        </text>
        <answer>Could be elaborated more, very short.</answer>
      </q3b>
    </question3>

    <question4>
      <title>Reflections on scalability</title>
      <q4a>
        <text>
          Is there a sound argument about the scalability limits of the
          concurrent implementation provided?
        </text>
        <answer>YES</answer>
      </q4a>
      <q4b>
        <text>
          Provide comments on how the reflections on scalability could be
          improved
        </text>
        <answer>Could have been more indepth.</answer>
      </q4b>
    </question4>

    <question5>
      <title>Argumentation on decisions made for performance</title>
      <q5a>
        <text>
          Is there a sound argument in the solution about the trade-off between
          locking overhead and concurrency?
        </text>
        <answer>YES</answer>
      </q5a>
      <q5b>
        <text>
          Provide comments on how the argument about performance trade-offs in
          the locking protocol could be improved
        </text>
        <answer>Could have been more indepth, like at what ratio of writes to reads
                is there a big drop in performance.</answer>
      </q5b>
    </question5>
  </programming>
</review>
